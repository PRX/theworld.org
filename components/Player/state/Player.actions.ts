/**
 * @file Player.actions.ts
 * Defines state change actions for audio player.
 */

export const PlayerActionTypes = {
  PLAYER_HYDRATE: '[Player] HYDRATE',
  PLAYER_PLAY: '[Player] PLAY',
  PLAYER_PAUSE: '[Player] PAUSE',
  PLAYER_TOGGLE_PLAYING: '[Player] TOGGLE_PLAYING',
  PLAYER_AUTOPLAY_ENABLE: '[PLAYER] AUTOPLAY_ENABLE',
  PLAYER_AUTOPLAY_DISABLE: '[PLAYER] AUTOPLAY_DISABLE',
  PLAYER_TOGGLE_AUTOPLAY: '[PLAYER] TOGGLE_AUTOPLAY',
  PLAYER_MUTE: '[Player] MUTE',
  PLAYER_UNMUTE: '[Player] UNMUTE',
  PLAYER_TOGGLE_MUTED: '[Player] TOGGLE_MUTED',
  PLAYER_UPDATE_VOLUME: '[Player] SET_VOLUME',
  PLAYER_UPDATE_PROGRESS: '[Player] UPDATE_PROGRESS',
  PLAYER_UPDATE_SCRUB_POSITION: '[Player] UPDATE_SEEKING',
  PLAYER_UPDATE_PROGRESS_TO_SCRUB_POSITION:
    '[Player] UPDATE_PROGRESS_TO_SEEKING',
  PLAYER_UPDATE_TRACKS: '[Player] UPDATE_TRACKS',
  PLAYER_UPDATE_CURRENT_TRACK_INDEX: '[Player] UPDATE_CURRENT_TRACK_INDEX',
  PLAYER_PLAY_EPISODE: '[PLayer] PLAY_EPISODE',
  PLAYER_PLAY_TRACK: '[PLAYER] PLAY_TRACK',
  PLAYER_PLAY_AUDIO: '[PLAYER] PLAY_AUDIO',
  PLAYER_NEXT_TRACK: '[Player] NEXT_TRACK',
  PLAYER_PREVIOUS_TRACK: '[Player] PREVIOUS_TRACK',
  PLAYER_UPDATE_CURRENT_TIME: '[Player] UPDATE_CURRENT_TIME',
  PLAYER_UPDATE_CURRENT_DURATION: '[Player] UPDATE_CURRENT_DURATION',
  PLAYER_ADD_TRACK: '[Player] ADD_TRACK',
  PLAYER_REMOVE_TRACK: '[Player] REMOVE_TRACK',
  PLAYER_REMOVE_ALL_TRACKS: '[Player] REMOVE_ALL_TRACKS',
  PLAYER_COMPLETE_CURRENT_TRACK: '[Player] COMPLETE_CURRENT_TRACK'
} as const;

export type PlayerActionTypes =
  typeof PlayerActionTypes[keyof typeof PlayerActionTypes];

export interface IPlayerAction {
  type: PlayerActionTypes;
  payload?: any;
}
